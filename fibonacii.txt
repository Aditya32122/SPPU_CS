public class FibonacciCombined {

    // Recursive method to calculate Fibonacci number
    public static int fibonacciRecursive(int n) {
        if (n <= 1) {
            return n;  // Base cases: F(0) = 0, F(1) = 1
        }
        return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2); // Recursive call
    }

    // Iterative method to calculate Fibonacci number
    public static int fibonacciIterative(int n) {
        if (n <= 1) {
            return n;  // Base cases: F(0) = 0, F(1) = 1
        }

        int a = 0, b = 1;
        int fib = 1;

        for (int i = 2; i <= n; i++) {
            fib = a + b; // Next Fibonacci number
            a = b;       // Move to next numbers in sequence
            b = fib;
        }
        return fib;
    }

    public static void main(String[] args) {
        int n = 10; // Number of terms in Fibonacci sequence

        // Print Fibonacci sequence using the recursive method
        System.out.println("Fibonacci sequence up to " + n + " terms (recursive):");
        for (int i = 0; i < n; i++) {
            System.out.print(fibonacciRecursive(i) + " ");
        }
        System.out.println();

        // Print Fibonacci sequence using the iterative method
        System.out.println("Fibonacci sequence up to " + n + " terms (iterative):");
        for (int i = 0; i < n; i++) {
            System.out.print(fibonacciIterative(i) + " ");
        }
        System.out.println();
    }
}
